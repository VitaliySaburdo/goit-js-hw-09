{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,UAAWC,SAASC,cAAc,qBAClCC,UAAWF,SAASC,cAAc,oBAClCE,OAAQH,SAASC,cAAc,sBAC/BG,UAAWJ,SAASC,cAAc,WA8BpC,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CApCbT,EAAKM,UAAUW,iBAAiB,SAEhC,SAAqBC,GACnBA,EAAIC,iBACJ,IAAIC,EAAQC,OAAOrB,EAAKC,UAAUqB,OAClC,MAAMC,EAAOF,OAAOrB,EAAKI,UAAUkB,OAC7BjB,EAASgB,OAAOrB,EAAKK,OAAOiB,OAElC,IAAK,IAAIE,EAAI,EAAGA,EAAInB,EAAQmB,IAAK,CAC/B,IAAIC,EAAWD,EAAI,EACfC,EAAW,IACbL,GAASG,GAEXhB,EAAckB,EAAUL,GACrBM,MAAK,EAAClB,SAAEA,EAAQC,MAAEA,MACjBX,EAAA6B,OAAOC,QAAQ,uBAAqBpB,QAAiBC,MAAW,CAC5DoB,SAAO,GACT,IAEHC,OAAM,EAACtB,SAAEA,EAAQC,MAAEA,MAClBX,EAAA6B,OAAOI,QAAQ,sBAAoBvB,QAAeC,MAAW,CAC3DoB,SAAS,GACT,G","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  fistDelay: document.querySelector('input[name=delay]'),\n  delayStep: document.querySelector('input[name=step]'),\n  amount: document.querySelector('input[name=amount]'),\n  submitBtn: document.querySelector('button'),\n};\n\nrefs.submitBtn.addEventListener('click', onSubmitBtn);\n\nfunction onSubmitBtn(evt) {\n  evt.preventDefault();\n  let delay = Number(refs.fistDelay.value);\n  const step = Number(refs.delayStep.value);\n  const amount = Number(refs.amount.value);\n\n  for (let i = 0; i < amount; i++) {\n    let position = i + 1;\n    if (position > 1) {\n      delay += step;\n    }\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`, {\n          useIcon: false,\n        });\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`, {\n          useIcon: false,\n        });\n      });\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$refs","fistDelay","document","querySelector","delayStep","amount","submitBtn","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","evt","preventDefault","delay1","Number","value","step","i","position1","then","Notify","success","useIcon","catch","failure"],"version":3,"file":"03-promises.fb4127ef.js.map"}